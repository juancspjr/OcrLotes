#!/usr/bin/env python3
"""
Script de prueba para validar las correcciones espec√≠ficas del MANDATO 5/X FASES 2 Y 3
Casos espec√≠ficos del usuario:
1. "Banco Mercantil, C . A . S . A . C . A, Banco Universal" ‚Üí "BANCO MERCANTIL"
2. "0412 *** 244" ‚Üí Tel√©fono con m√°scara de seguridad v√°lido
3. "20/06/ 2025" ‚Üí Fecha con espacio adicional manejada correctamente
4. "210,00" ‚Üí Monto venezolano normalizado a "210.00"
"""

import sys
sys.path.append('.')

from main_ocr_process import OrquestadorOCR
import json

def test_correcciones_mandato_5x():
    """
    Prueba las correcciones espec√≠ficas implementadas para el Mandato 5/X Fases 2 y 3
    """
    print("üîç INICIANDO PRUEBAS DE CORRECCIONES ESPEC√çFICAS MANDATO 5/X FASES 2 Y 3")
    print("=" * 80)
    
    # Texto de prueba con los casos espec√≠ficos mencionados por el usuario
    texto_prueba = """
    A Personas 104,54 Bs Fecha : 20/06/ 2025 Operacion; 003039387344
    Concepto Nro . Referencia Fecha y hora 106 93 48311146148
    Banco Mercantil, C . A . S . A . C . A, Banco Universal
    Telefono: 0412 *** 244
    Monto: 210,00 Bs
    """
    
    orquestador = OrquestadorOCR()
    
    # Simular extracted_fields vac√≠o para probar las correcciones
    extracted_fields = {}
    
    print(f"üìù TEXTO DE PRUEBA:\n{texto_prueba}")
    print("\n" + "=" * 80)
    
    # Aplicar correcciones espec√≠ficas
    print("üîß APLICANDO CORRECCIONES ESPEC√çFICAS...")
    corrected_fields = orquestador._aplicar_correcciones_mandato_5x_fases_2_3(
        extracted_fields, texto_prueba
    )
    
    print("\n‚úÖ RESULTADOS DE LAS CORRECCIONES:")
    print("=" * 80)
    
    for campo, valor in corrected_fields.items():
        if valor:
            print(f"üìã {campo}: '{valor}'")
    
    print("\nüéØ VALIDACI√ìN DE CASOS ESPEC√çFICOS:")
    print("=" * 80)
    
    # Validar caso 1: Banco Mercantil
    if corrected_fields.get('banco_destino') == 'BANCO MERCANTIL':
        print("‚úÖ CASO 1: 'Banco Mercantil, C . A . S . A . C . A, Banco Universal' ‚Üí 'BANCO MERCANTIL' ‚úì")
    else:
        print("‚ùå CASO 1: Banco destino no detectado correctamente")
    
    # Validar caso 2: Tel√©fono con m√°scara
    if corrected_fields.get('telefono') == '0412***244':
        print("‚úÖ CASO 2: '0412 *** 244' ‚Üí Tel√©fono con m√°scara v√°lido ‚úì")
    else:
        print("‚ùå CASO 2: Tel√©fono con m√°scara no detectado correctamente")
    
    # Validar caso 3: Fecha con espacio
    if corrected_fields.get('pago_fecha') == '20/06/ 2025':
        print("‚úÖ CASO 3: '20/06/ 2025' ‚Üí Fecha con espacio manejada correctamente ‚úì")
    else:
        print("‚ùå CASO 3: Fecha con espacio no detectada correctamente")
    
    # Validar caso 4: Monto venezolano
    if corrected_fields.get('monto') == '210.00':
        print("‚úÖ CASO 4: '210,00' ‚Üí '210.00' (monto normalizado) ‚úì")
    else:
        print("‚ùå CASO 4: Monto venezolano no normalizado correctamente")
    
    print("\nüèÜ PRUEBA COMPLETADA")
    print("=" * 80)
    
    return corrected_fields

if __name__ == "__main__":
    test_correcciones_mandato_5x()