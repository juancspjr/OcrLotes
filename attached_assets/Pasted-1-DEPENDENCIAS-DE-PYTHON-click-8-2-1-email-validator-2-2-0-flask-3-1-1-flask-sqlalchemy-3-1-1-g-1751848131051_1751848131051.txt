1. DEPENDENCIAS DE PYTHON
click>=8.2.1
email-validator>=2.2.0
flask>=3.1.1
flask-sqlalchemy>=3.1.1
gunicorn>=23.0.0
itsdangerous>=2.2.0
jinja2>=3.1.6
markupsafe>=3.0.2
numpy>=2.3.1
onnx>=1.18.0
onnxruntime>=1.22.0
onnxtr>=0.7.1
opencv-python>=4.11.0.86
pillow>=11.2.1
psutil>=7.0.0
psycopg2-binary>=2.9.10
requests>=2.32.4
scikit-image>=0.25.2
scipy>=1.16.0
werkzeug>=3.1.3

2. COMANDO DE INICIO DE LA APLICACIÓN
gunicorn --bind 0.0.0.0:5000 --reuse-port --reload main:app

3. ENDPOINTS API PRINCIPALES
GET  /                           - Página principal
GET  /dashboard                  - Dashboard principal
GET  /api/ocr/processed_files    - Listar archivos procesados
POST /api/ocr/process_image      - Procesar imagen individual
POST /api/ocr/process_batch      - Procesar lote de imágenes
GET  /api/ocr/result/<request_id> - Obtener resultado por ID
GET  /api/ocr/queue/status       - Estado de la cola
GET  /api/ocr/result_data/<filename> - Datos de resultado específico
GET  /api/ocr/download_json/<filename> - Descargar JSON individual
GET  /api/extract_results        - Extraer JSON consolidado empresarial
POST /api/clean                  - Limpiar sistema
POST /api/clean_queue            - Limpiar cola

4. ESTRUCTURA DE DIRECTORIOS CLAVE
/
├── main.py                      - Punto de entrada
├── app.py                       - Configuración Flask
├── routes.py                    - Rutas API
├── config.py                    - Configuraciones
├── aplicador_ocr.py            - Motor OCR
├── main_ocr_process.py         - Procesamiento principal
├── templates/
│   ├── dashboard_workflow.html  - Dashboard principal
│   └── interface_excellence_dashboard.html - Dashboard alternativo
├── static/                     - Archivos estáticos
├── uploads/                    - Archivos subidos
├── temp/                       - Archivos temporales
├── data/                       - Datos procesados
├── models/                     - Modelos ONNX
└── pyproject.toml              - Dependencias proyecto

5. CONFIGURACIONES CRÍTICAS
Puerto de escucha: 5000
Base de datos: PostgreSQL (configurar DATABASE_URL)
Variables de entorno requeridas:
- DATABASE_URL (PostgreSQL)
- SESSION_SECRET (Flask sessions)

Directorios que se crean automáticamente:
- uploads/
- temp/
- data/
- models/

Modelos ONNX se descargan automáticamente en primera ejecución
Sistema asíncrono con workers en background
Retención de archivos: 24 horas